----------------------------------------------------------------------
// Шпаргалка по Allure Report //
----------------------------------------------------------------------

- Пример кода Lambda Steps (удобно когда уникальные проверки и в других тестах не будут проверяться те же селекторы):

     public class "название класса" {
	 
     @Test
     public void "название метода"() {
	 
        step("Открыть главную страницу Яндекс", () -> {
		
            open("https://yandex.ru/");
        });

        step("Найти раздел с погодой", ()->{
		
            $("#wd-wrapper-_weather-1").shouldBe(visible);
        });
		и т.д
	  }
	}
    
----------------------------------------------------------------------	

- Пример кода Annotated Steps (удобно если много одинаковых проверок в разных тестах):

    public class "название класса№1 в котором пишутся степы и основные проверки" {
	 
      @Step("Открыть главную страницу Яндекс")
      public void "название метода1класса1"() {
	  
        open("https://yandex.ru/");
      }  

      @Step("Найти раздел с погодой")
      public void "название метода2класса1" {
	  
        $("#wd-wrapper-_weather-1").shouldBe(visible);
      }
	  и т.д
	}
	
	public class "название класса№2 (отдельный файл) из которого вызываются метода класса№1" {
	 
      private "название класса№1" steps = new "название класса№1"();
	  
	  @Test
      public void "название метода"() {
	
        steps."название метода1класса1"();
        steps."название метода2класса1";
		
		и т.д
	  }
	}
	
----------------------------------------------------------------------

- Добавление аттачментов(скриншоты, код страницы и тд) [! используйте скриншоты с умом, т.к весят достаточно много]:
* На примере кода Lambda Steps:

    public class "название класса" {
	
	@Attachment(value = "Скриншот", type = "image/png")
    public byte[] "название метода пр-р:annotatedAttachment"(){
	
        return Selenide.screenshot(OutputType.BYTES);
    }
	
	@Attachment(value = "Активная страница", type = "text/html")
    public byte[] "название метода пр-р:takePageSource"() {
	
        return WebDriverRunner.getWebDriver().getPageSource().getBytes(StandardCharsets.UTF_8);
    }


     @Test
     public void "название метода"() {
	 
        step("Открыть главную страницу Яндекс", () -> {
		
            open("https://yandex.ru/");
			annotatedAttachment();         //В Allure у данной проверки будет возможность посмотреть скриншот страницы
			takePageSource();              //В Allure у данной проверки будет возможность увидеть активную страницу и взаимодействовать с ней
        });

        step("Найти раздел с погодой", ()->{
		
            $("#wd-wrapper-_weather-1").shouldBe(visible);
			String source = WebDriverRunner.getWebDriver().getPageSource();   --- //Добавление этих двух строк в степ позволит в Allure увидеть исходный код страницы
            Allure.attachment("Исходный код страницы", source);               ---
        });
		и т.д
	  }
	}

----------------------------------------------------------------------

- Добавление лейблов (@Feature,@Story,@Owner,@Severity,@Link,@Description,@DisplayName):
* На примере кода Lambda Steps:

<Через Аннотации> "Статический подход"

    public class "название класса" {
	
    @Test
    @Feature("Главная страница Яндекс")
    @Story("Поиск блока "Погода"")
    @Owner("ФИО")
    @Severity(SeverityLevel.BLOCKER)   //Вместо BLOCKER можно так же указать: CRITICAL, MINOR, NORMAL, TRIVIAL
    @Link(name = "Yandex", url = "https://yandex.ru/")
	@Description("Здесь будет любое описание данного теста")
    @DisplayName("Проверка, что на странице яндекса есть блока с погодой")
     public void "название метода"() {
	 
        step("Открыть главную страницу Яндекс", () -> {
		
            open("https://yandex.ru/");
        });

        step("Найти раздел с погодой", ()->{
		
            $("#wd-wrapper-_weather-1").shouldBe(visible);
        });
		и т.д
	  }
	}
	
	
<Через Методы> "Динамический подход. Пригодится в будущем, можно использовать в других тестах."

    public class "название класса" {
	
     public void "название метода"() {
	 
	  Allure.feature("Главная страница Яндекс");
        Allure.story("Поиск блока "Погода"");
        Allure.label("owner", "ФИО");
        Allure.label("Severity",SeverityLevel.MINOR.toString());  //Вместо MINOR можно так же указать: BLOCKER, CRITICAL, NORMAL, TRIVIAL
        Allure.link("Yandex", "https://yandex.ru/");
        Allure.description("Здесь будет любое описание данного теста");
	 
        step("Открыть главную страницу Яндекс", () -> {
		
            open("https://yandex.ru/");
        });

        step("Найти раздел с погодой", ()->{
		
            $("#wd-wrapper-_weather-1").shouldBe(visible);
        });
		и т.д
	  }
	}

----------------------------------------------------------------------

- Добавление параметризации в тест:

    public class "название класса" {

     @ParameterizedTest(name = "Проверка сайта в регионах")
     @CsvSource({
            "Москва, Московская область",
            "Санкт-Петербург, Ленинградская область",
            "Омск, Омская область"
     })
	 
     public void "название метода"(String city, String state) {

        parameter("Город", city);
        parameter("Область", state);

        step("Открываем сайт в регионе " + state);
        step("Проверяем что город определился как " + city);

      }
    }
	
----------------------------------------------------------------------

- Добавление Листнера в тест (используется, когда нет времени на другие проверки и написание кода и нужно внести некую ясность по прохождению тестов в Allure здесь и сейчас ):
* Плюс на упавшие проверки автоматически будет добавляться скриншот страницы с проверкой и код страницы

    public class "название класса" {
	 
     @Test
     public void "название метода"() {
	 
	    SelenideLogger.addListener("allure", new AllureSelenide());  //Добавляется одна строка в тест и уже будет понятно на какой строке кода тест упал например
	 
            open("https://yandex.ru/");
            $("#wd-wrapper-_weather-1").as("Блок погоды").shouldBe(visible);    // as("text") - изменит в репорте Allure данный текст: "#wd-wrapper-_weather-1" на "text"
			
		и т.д
	  }
	}
	
----------------------------------------------------------------------